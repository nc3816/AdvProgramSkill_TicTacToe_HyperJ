   /**
    * Check for a winning configuration on the tic tac toe board.
    *
    * @param player the number of the player who just marked a square
    * @return true iff there is a winning configuration on the board
    */
   private boolean nInARow( int player ) {
      boolean result = false;
      int dim = getDimension();
      // Look for winning row.
      for ( int row=1; row<=dim; ++row ) {
         boolean winning = true;
         for ( int col=1; col<=dim; ++col ) {
            winning = winning && ( getMark( row, col ) == player );
         }
         result = result || winning;
      }

      // Look for winning column.
      for ( int col=1; col<=dim; ++col ) {
         boolean winning = true;
         for ( int row=1; row<=dim; ++row ) {
            winning = winning && ( getMark( row, col ) == player );
         }
         result = result || winning;
      }

      // Look for winning diagonal.
      boolean posSlope = true;
      boolean negSlope = true;
      for ( int i=1; i<=dim; ++i ) {
         negSlope = negSlope && ( getMark( i, i ) == player );
         posSlope = posSlope && ( getMark( i, 1+dim-i ) == player );
      }
      result = result || posSlope;
      result = result || negSlope;

      return result;
   }
